@model IEnumerable<Capstone_Wishlist_app.Services.Item>

@if (Model.Any()) {
    <table class="table">
        <tr>
            <th></th>
            <th>Item</th>
            <th>Price</th>
            <th>Recommended Ages</th>
        </tr>

        @foreach (var item in Model) {
            <tr>
                <td>
                    <img src=@item.ImageUrl />
                </td>
                <td>
                    <a href=@item.ListingUrl>@item.Title</a><span class="glyphicon glyphicon-link" />
                </td>
                <td class="text-right">
                    @string.Format("{0:C}", item.ListPrice)
                </td>
                <td>
                    @(FormatAgeRange(item.MinAgeMonths, item.MaxAgeMonths))
                </td>
            </tr>
        }
    </table>
} else {
    <p class="text-warning">
        <span class="glyphicon glyphicon-warning-sign"></span>
        No items from the retailer matched the search terms. Try entering keywords that are more general to see some results.
    </p>
}

@functions {
    string FormatAge(int ageMonths) {
        if (ageMonths < 24) {
            return string.Format("{0} months");
        }

        if (ageMonths % 12 != 0) {
            return string.Format("{0} years {1} months", ageMonths / 12, ageMonths % 12);
        }

        return string.Format("{0} years", ageMonths / 12);
    }

    string FormatAgeRange(int minAgeMonths, int maxAgeMonths) {
        if (minAgeMonths == 0 && maxAgeMonths == 0) {
            return "all ages";
        }
        if (minAgeMonths == 0) {
            return "up to " + FormatAge(maxAgeMonths);
        }
        if (maxAgeMonths == 0) {
            return FormatAge(minAgeMonths) + " and up";
        }

        return FormatAge(minAgeMonths) + " to " + FormatAge(maxAgeMonths);
    }
}