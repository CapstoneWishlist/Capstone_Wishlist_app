@model Capstone_Wishlist_app.Models.RegisterChildModel
@using Capstone_Wishlist_app.Models

@{
    ViewBag.Title = "RegisterChild";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Register a Child - @Model.FamilyName Family</h2>

@if (TempData["registeredChild"] != null) {
    var registeredChild = (Child) TempData["registeredChild"];
    <p class="text-success has-success">
        <b>@registeredChild.FirstName</b> was successfully registered!
         Create a profile for <b>@registeredChild.FirstName</b> @Html.ActionLink("here", "EditProfile", "Child", new { id = registeredChild.Id }, null)
         or continue registering children below.
    </p>
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Child's Information</h4>
        <hr />
        @Html.HiddenFor(model => model.FamilyId)
        @Html.HiddenFor(model => model.FamilyName)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Gender, new SelectListItem[] { 
                    new SelectListItem {
                        Text = "Male",
                        Value = Gender.Male.ToString()
                    },
                    new SelectListItem {
                        Text = "Female",
                        Value = Gender.Female.ToString()
                    },
                    new SelectListItem {
                        Text = "Unspecified",
                        Value = Gender.Unspecified.ToString()
                    }
                }, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-default" />
            </div>
        </div>
    </div>
}
