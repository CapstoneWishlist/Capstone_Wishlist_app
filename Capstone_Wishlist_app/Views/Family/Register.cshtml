@model Capstone_Wishlist_app.Models.RegisterFamilyModel
@using Capstone_Wishlist_app.Models

@{
    ViewBag.Title = "Register a Family";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Register a Family</h2>
@if (TempData["registeredFamily"] != null) {
    var newFamily = (RegisteredFamilyViewModel) TempData["registeredFamily"];

    <div class="well">
        <p class="text-success">
            <span class="glyphicon glyphicon-check"></span>
            The @newFamily.LastName family has been successfully registered.
        </p>
        <p>
            Family members can use the credentials below to log in.
            Please note the password and pass it on to the family's representative immediately.
            <b>The password below can not be recovered after this page is closed or reloaded.</b> 
            It can be reset to a new value if the value below is lost.
        </p>
        <dl class="dl-horizontal">
            <dt>UserName</dt>
            <dd>@newFamily.Username</dd>
            <dt>Password</dt>
            <dd>@newFamily.Password</dd>
        </dl>
        <p>@Html.ActionLink("Register children for this family", "RegisterChild", new { id = newFamily.Id }, new { @class = "btn btn-default" })</p>
    </div>
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Family Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ParentFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParentFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParentFirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ParentLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParentLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParentLastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <h4>@Html.DisplayNameFor(model => model.ShippingAddress)</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.IsShippingToCharity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsShippingToCharity, new { @class = "form-control" })
            </div>
        </div>
        @Html.EditorFor(model => model.ShippingAddress, "_Address")
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
