@model IEnumerable<Capstone_Wishlist_app.Models.WishlistItemViewModel>
@using Capstone_Wishlist_app.Models

@if (TempData.ContainsKey("removedItem")) {
}
<table class="table">
    <tr>
        <th>Status</th>
        <th>Image</th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ListPrice)
        </th>
        <th>Recommended Ages</th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @switch (item.Status) {
                    case WishlistItemStatus.Unapproved:
                        <text>
                            <i class="fa fa-star-o"></i>
                            Unapproved
                        </text>
                        break;
                    case WishlistItemStatus.Avaliable:
                    <text>
                        <i class="fa fa-check-circle"></i>
                        Available
                    </text>
                        break;
                }
            </td>
            <td><img src=@item.ImageUrl /></td>
            <td>
                <a href=@item.ListingUrl target="_blank">
                    @item.Title
                </a>
                <i class="fa fa-external-link"></i>
            </td>
            <td>@string.Format("{0:C}", item.ListPrice)</td>
            <td>@AgeRange.FormatAgeRange(item.MinAgeMonths, item.MaxAgeMonths)</td>
            <td>
                <button type="button" class="btn btn-danger" onclick="removeItem(this, @item.Id)">
                    <span class="glyphicon glyphicon-remove"></span>
                    Remove this item
                </button>
            </td>
        </tr>
    }

</table>
